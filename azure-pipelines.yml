trigger:
- master

pr: none

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'curriculum'

steps:
- task: NodeTool@0
  displayName: 'Use Node.js 8.x'
  inputs:
    versionSpec: '8.x'

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
  displayName: 'Use Yarn 1.x'
  inputs:
    checkLatest: true

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@2
  displayName: 'Install dependencies'
  inputs:
    Arguments: install

- task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@2
  displayName: 'Build'
  inputs:
    Arguments: build

- task: Docker@1
  displayName: 'Build container'
  inputs:
    command: Build an image
    dockerFile: Dockerfile
    imageName: $(docker.Id)/$(imageName):$(Build.BuildId)
    includeLatestTag: true

- task: Docker@1
  displayName: 'Tag container'
  inputs:
    command: Tag image
    tagMultipleImages: true
    imageNamesPath: 
      $(docker.Id)/$(imageName):$(Build.BuildId)'
      $(docker.Id)/$(imageName)

- task: Docker@1
  displayName: 'Login to registry'
  inputs:
    command: login
    containerregistrytype: Container Registry
    dockerRegistryEndpoint: docker

- task: Docker@1
  displayName: 'Push container'
  inputs:
    command: Push an image
    pushMultipleImages: true
    imageNamesPath: 
      $(docker.Id)/$(imageName):$(Build.BuildId)'
      $(docker.Id)/$(imageName)

- task: Kubernetes@1
  displayName: 'Update deployment'
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: microk8s
    command: set
    arguments: image deployment/$(kube.deployment) $(kube.container)=$(docker.Id)/$(imageName):$(Build.BuildId) --insecure-skip-tls-verify
